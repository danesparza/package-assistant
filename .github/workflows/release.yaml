name: Build and release

on: [push]

env:
  APP_NAME: package-assistant
  APP_VERSION: 1.3.${{github.run_number}}
  CONTAINER_IMAGE_NAME: package-assistant:1.1.${{github.run_number}}
  PACKAGE_PATH: github.com/danesparza/package-assistant
  NR_DASHBOARD_LIC: ${{secrets.NR_DASHBOARD_LIC}}

jobs:
  vulnerabilitycheck:
    name: Vulnerabilities scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.22.3'
          check-latest: true

      - name: Get scanner tool
        run: go install golang.org/x/vuln/cmd/govulncheck@latest

      - name: Scan for vulnerabilities
        run: govulncheck ./...

  test:
    name: Tests
    runs-on: ubuntu-latest
    container: golang:latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22.3'

      - name: Get dependencies
        run: go mod download

      - name: Test
        run: go test -v ./...

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22.3'

      - name: Get compiler tool
        run: go install github.com/mitchellh/gox@latest

      - name: Get dependencies
        run: go mod download

      - name: Build
        run: mkdir -p /tmp/binaries; gox -osarch="linux/amd64 darwin/amd64" -ldflags "-X ${PACKAGE_PATH}/version.BuildNumber=${GITHUB_RUN_NUMBER} -X ${PACKAGE_PATH}/version.CommitID=${GITHUB_SHA} -X '${PACKAGE_PATH}/version.Prerelease=-' -X ${PACKAGE_PATH}/internal/telemetry.NRLicense=${NR_DASHBOARD_LIC}" -output "/tmp/binaries/${APP_NAME}_{{.OS}}_{{.Arch}}" ${PACKAGE_PATH}/...

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Release binaries
          path: /tmp/binaries

  dockerize:
    name: Docker image
    needs:
      - test
      - build
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build docker image
        run: docker build -f Dockerfile -t ${CONTAINER_IMAGE_NAME} --build-arg buildNum=${{github.run_number}} --build-arg circleSha=${{github.sha}} --build-arg packagePath=${PACKAGE_PATH} .

      - name: Tag docker image for Docker Hub
        run: docker tag ${CONTAINER_IMAGE_NAME} danesparza/${CONTAINER_IMAGE_NAME}

      - name: Push docker image
        run: docker push danesparza/${CONTAINER_IMAGE_NAME}



